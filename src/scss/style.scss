@use "sass:math";

// Підключення міксинів ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Підключення шрифтів ===========================================================================================================================================================================================================================================================================
@import url(https://fonts.googleapis.com/css?family=Manrope:regular,600,700);

// Підключити, якщо є локальні файли шрифтів
// @import "fonts/fonts";

// Підключення іконкових шрифтів ==============================================================================================================================================================================================================================================================================
// Підключити, якщо є файл іконкового шрифту
// @import "fonts/icons";

// ============================================================================================================================================================================================================================================================================================================================================================================================
// Налаштування шаблону ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// За замовчуванням шрифт ==============================================================================================================================================================================================================================================================================
$fontFamily: "Manrope";
$fontSize: toRem(24); // де 14(px) - розмір шрифту за замовчуванням з макету

// Основні кольори
$mainColor: #2b2a30; // Колір шрифту за замовчуванням
$turquoiseColor: #f5ddf3; // Колір шрифту за замовчуванням
$purpleColor: #8380d1; // Колір шрифту за замовчуванням
$yellowColor: #daff6d; // Колір шрифту за замовчуванням
$grayColor: #c0c0c0; // Колір шрифту за замовчуванням
$grayLiteColor: #f3f3f3; // Колір шрифту за замовчуванням

$blackGradient: linear-gradient(90deg, #2b2a30 0%, #87858d 100%); // Колір шрифту за замовчуванням

// Палітра кольорів
// @import "base/colors-palette";

// Налаштування адаптивної сітки ===============================================================================================================================================================================================================================================================================================

// Мінімальна ширина сторінки
$minWidth: 320;
// Ширина полотна (макету)
$maxWidth: 1920;
// Ширина обмежуючого контейнера (0 = немає обмеження)
$maxWidthContainer: 1660;
// Загальний відступ у контейнера
// (30 = по 15px ліворуч і праворуч, 0 = немає відступу)
$containerPadding: 10;

// Ширина спрацьовування першого брейкпоінту
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поїнти
$pc: toEm($containerWidth); // ПК, ноутбуки, деякі планшети у горизонтальному положенні
$tablet: toEm(991.98); // Планшети, деякі телефони в горизонтальному положенні
$mobile: toEm(767.98); // Телефони L
$mobileSmall: toEm(479.98); // Телефони S

// Тип адаптива:
// 1 = чуйність (у контейнера немає брейкпоінтів),
// 2 = по брейк-поїнт (контейнер змінює свою ширину по брейк-поїнт)
$responsiveType: 1;

// ============================================================================================================================================================================================================================================================================================================================================================================================
// ============================================================================================================================================================================================================================================================================================================================================================================================

// Обнулення ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

// Підключення компонентів tailwind ============================================================================================================================================================================================== =============================================================================================== ===========================================================================
// @import "libs/tailwind";

// Стилі тега BODY ============================================================================================================================================================================================================================================================================================================================================================================================
body {
	background-color: #fff;
	@include adaptiveValue("font-size", 24, 14);
	// scrollbar-gutter: stable;
	// Скролл заблоковано
	.lock & {
		overflow: hidden;
		touch-action: none;
		overscroll-behavior: none;
	}
	// Сайт завантажений
	.loaded & {
		opacity: 1;
		transition: opacity 0.5s ease 0s;
	}
}
// Оболонка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	@supports (overflow: clip) {
		overflow: clip;
	}
	// Притискаємо footer
	> main {
		flex: 1 1 auto;
	}
	// Фікс для слайдерів
	> * {
		min-width: 0;
	}
}
// Обмежуючий контейнер ======================================================================================================================================================================================================================

// (i) Стилі будуть застосовуватись до
// всіх класів, що містять *__container
// Наприклад header__container, main__container і т.п.
// Сніппет (HTML): cnt

@if ($responsiveType==1) {
	// Чуйна
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			@if ($maxWidthContainer>0) {
				@include adaptiveValue("padding-left", 55, 15);
				@include adaptiveValue("padding-right", 55, 15);
				// padding: 0 toRem(math.div($containerPadding, 2));
			} @else {
				@include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
				@include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
			}
		}
	}
} @else {
	// Брейк-поїнтами
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: toRem($containerWidth);
		} @else {
			@if ($containerPadding>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: toRem(970);
		}
		@media (max-width: $tablet) {
			max-width: toRem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 toRem(math.div($containerPadding, 2));
			}
		}
	}
}
// (i) Експерементальний функціонал
// Заміна обмежуючому контейнеру
[class*="--gc"] {
	@include gridContainer();
}
// ========================================================================================================================================================
// Підключення базових стилів, шаблонів (заготівель) та допоміжних класів
// Для підключення/вимкнення конкретних стилів дивись base.scss
@import "base";
// $=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=->
// Підключення стилів загальних елементів проекту
@import "common";
// $=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=->
// Підключення стилів окремих блоків
@import "header";
@import "footer";
// ========================================================================================================================================================
// Hero
.hero {
	@include adaptiveValue("padding-top", 176, 110, 2, 1920, 1024);
	&:not(:last-child) {
		@include adaptiveValue("margin-bottom", 80, 24);
	}
	@media (max-width: toEm(1024)) {
		@include adaptiveValue("padding-top", 110, 68, 0, 1024, 320);
	}
	// .hero__svg
	&__svg {
		position: absolute;
		&--one {
			@include adaptiveValue("top", -150, -30);
			@include adaptiveValue("width", 438, 100);
			@include adaptiveValue("right", -110, -24);
			@media (max-width: $mobile) {
				display: none;
			}
		}
		&--two {
			@include adaptiveValue("width", 439, 120);
			@include adaptiveValue("right", -115, -29);
			@include adaptiveValue("bottom", -130, -35);
		}
	}
	// .hero__container
	&__container {
		position: relative;
		&::before,
		&::after {
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			background-color: $purpleColor;
		}
		&::before {
			top: 0;
			right: 0;
			filter: blur(190px);
			transform: translate(50%, -50%);
			@include adaptiveValue("width", 800, 300);
			@include adaptiveValue("height", 450, 150);
			@media (max-width: $mobile) {
				filter: blur(110px);
				transform: translate(40%, -65%);
			}
			@media (max-width: $mobileSmall) {
				filter: blur(80px);
			}
		}
		&::after {
			bottom: 0;
			filter: blur(340px);
			transform: translate(-65%, 20%) rotate(45deg);
			@include adaptiveValue("width", 780, 300);
			@include adaptiveValue("height", 530, 150);
			@media (max-width: $mobile) {
				display: none;
			}
		}
	}
	// .hero__body
	&__body {
		overflow: hidden;
		position: relative;
		border: 2px solid rgba(255, 255, 255, 0.95);
		background: url("@img/hero/hero.jpg") right top / cover no-repeat;
		@include adaptiveValue("border-radius", 24, 18);
		@include adaptiveValue("padding-top", 92, 36, 2, 1920, 1024);
		@include adaptiveValue("padding-left", 80, 30, 2, 1920, 1024);
		@include adaptiveValue("padding-right", 80, 30, 2, 1920, 1024);
		@include adaptiveValue("padding-bottom", 92, 36, 2, 1920, 1024);
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("padding-top", 36, 24, 0, 1024, 320);
			@include adaptiveValue("padding-left", 30, 16, 0, 1024, 320);
			@include adaptiveValue("padding-right", 30, 16, 0, 1024, 320);
			@include adaptiveValue("padding-bottom", 36, 24, 0, 1024, 320);
		}
		@media (max-width: $mobile) {
			background: url("@img/hero/hero-mob.jpg") right top / cover no-repeat;
		}
		&::before {
			top: 0;
			left: 0;
			content: "";
			width: 100%;
			height: 100%;
			position: absolute;
			background: linear-gradient(90deg, rgba(#000, 0.45) 0%, rgba(#000, 0) 100%);
			@media (max-width: $mobile) {
				background: linear-gradient(230deg, rgba(0, 0, 0, 0) 20%, rgba(0, 0, 0, 0.65) 100%);
			}
		}
		@media (max-width: toEm(589.98)) {
			@include adaptiveValue("background-position-x", 0, -20, 2, 589.98, 445);
		}
		@media (max-width: toEm(445)) {
			@include adaptiveValue("background-position-x", -20, -100, 0, 445, 320);
		}
	}
	// .hero__inner
	&__inner {
		z-index: 1;
		position: relative;
	}
	// .hero__heading
	&__heading {
		color: #fff;
		display: grid;
		@include adaptiveValue("gap", 32, 24, 2, 1920, 1024);
		@include adaptiveValue("max-width", 890, 280, 2, $containerWidth, 479.98);
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("gap", 24, 12, 0, 1024, 320);
		}
		@media (max-width: $mobileSmall) {
			@include adaptiveValue("max-width", 280, 190, 0, 479.98, 320);
		}
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 56, 28, 2, 1920, 1024);
			@media (max-width: toEm(1024)) {
				@include adaptiveValue("margin-bottom", 28, 14, 0, 1024, 320);
			}
		}
	}
	// .hero__title
	&__title {
		font-weight: 600;
		line-height: 117%;
		@include adaptiveValue("font-size", 48, 24, 2, 1920, 1024);
		@media (max-width: $mobile) {
			line-height: 125%;
		}
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("font-size", 24, 16, 2, 1024, 375);
		}
		@media (max-width: toEm(375)) {
			@include adaptiveValue("font-size", 16, 14, 0, 375, 320);
		}
	}
	// .hero__text
	&__text {
		line-height: 125%;
		@include adaptiveValue("font-size", 32, 18, 2, 1920, 1024);
		@media (max-width: $mobile) {
			line-height: 133%;
		}
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("font-size", 18, 12, 0, 1024, 375);
		}
	}
	// .hero__button
	&__button {
		@include adaptiveValue("font-size", 24, 16, 2, 1920, 1024);
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("font-size", 16, 12, 2, 1024, 370);
		}
		@media (max-width: toEm(370)) {
			@include adaptiveValue("font-size", 12, 11, 0, 370, 320);
		}
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 56, 28, 2, 1920, 1024);
			@media (max-width: toEm(1024)) {
				@include adaptiveValue("margin-bottom", 28, 14, 0, 1024, 320);
			}
		}
		&.button--yellow {
			@include adaptiveValue("min-height", 80, 54, 2, 1920, 1024);
			@media (max-width: toEm(1024)) {
				@include adaptiveValue("min-height", 54, 36, 0, 1024, 320);
			}
		}
	}
	// .hero__blockquote
	&__blockquote {
		color: #fff;
		line-height: 133%;
		@include adaptiveValue("font-size", 24, 16, 2, 1920, 1024);
		@include adaptiveValue("max-width", 755, 280, 2, $containerWidth, 479.98);
		@media (max-width: $mobile) {
			line-height: 125%;
		}
		@media (max-width: toEm(1024)) {
			@include adaptiveValue("font-size", 16, 11, 0, 1024, 320);
		}
		@media (max-width: $mobileSmall) {
			@include adaptiveValue("max-width", 280, 210, 0, 479.98, 320);
		}
	}
}
// How
.how {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .how__container
	&__container {
		position: relative;
		&::before,
		&::after {
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			filter: blur(190px);
			background-color: $purpleColor;
			@include adaptiveValue("width", 600, 300);
			@include adaptiveValue("height", 400, 200);
			@media (max-width: $mobile) {
				filter: blur(110px);
			}
		}
		&::before {
			top: 0;
			right: 0;
			transform: translate(60%, -20%);
			@media (max-width: $mobile) {
				display: none;
			}
		}
		&::after {
			bottom: 0;
			transform: translate(-60%, 20%);
			@media (min-width: $mobile) {
				left: 0;
			}
			@media (max-width: $mobile) {
				right: 0;
				transform: translate(35%, 30%);
			}
		}
	}
	// .how__blocks
	&__blocks {
		display: grid;
		@include adaptiveValue("row-gap", 24, 16);
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 24, 16);
		}
	}
	// .how__label
	&__label {
		color: #000;
		@include adaptiveValue("padding-left", 40, 8);
	}
}
.block-how {
	@include adaptiveValue("padding", 40, 8);
	// .block-how__body
	&__body {
		display: flex;
		position: relative;
		@include adaptiveValue("gap", 24, 8);
	}
}
// Our
.our {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .our__container
	&__container {
		position: relative;
		&::before {
			bottom: 0;
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			filter: blur(340px);
			background-color: $purpleColor;
			transform: translate(-65%, 20%) rotate(45deg);
			@include adaptiveValue("width", 780, 300);
			@include adaptiveValue("height", 530, 150);
			@media (max-width: $mobile) {
				filter: blur(110px);
				transform: translate(-65%, -100%) rotate(45deg);
			}
		}
	}
	// .our__title
	&__title {
		text-align: center;
	}
	// .our__body
	&__body {
		display: grid;
		margin: 0 auto;
		max-width: toRem(1160);
		@include adaptiveValue("gap", 32, 24);
	}
	// .our__block
	&__block {
	}
}
.block-our {
	display: grid;
	@include adaptiveValue("gap", 24, 16);
	@include adaptiveValue("padding", 40, 14);
	box-shadow:
		rgba($purpleColor, 0.3) 5px 5px,
		rgba($purpleColor, 0.2) 10px 10px,
		rgba($purpleColor, 0.1) 15px 15px,
		rgba($purpleColor, 0.05) 20px 20px;
	@media (min-width: $mobile) {
		grid-template-columns: 50.862069% 1fr;
	}
	&.back-blure {
		border: 1px solid rgba($purpleColor, 0.25);
	}
	&:nth-child(2) {
		.block-our__image {
			img {
				object-position: left;
			}
		}
	}
	// .block-our__content
	&__content {
		display: flex;
		@include adaptiveValue("gap", 24, 8);
	}
	// .block-our__icon
	&__icon {
	}
	// .block-our__text
	&__text {
	}
	// .block-our__image
	&__image {
	}
}
// Product
.product {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .product__container
	&__container {
		position: relative;
		&::before {
			top: 50%;
			right: 0;
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			filter: blur(190px);
			background-color: $purpleColor;
			transform: translate(75%, -50%) rotate(45deg);
			@include adaptiveValue("width", 600, 300);
			@include adaptiveValue("height", 400, 200);
			@media (max-width: $mobile) {
				filter: blur(110px);
				transform: translate(40%, -5%) rotate(0deg);
			}
		}
	}
	// .product__title
	&__title {
	}
	// .product__items
	&__items {
		display: grid;
		align-items: start;
		@include adaptiveValue("gap", 40, 18);
		@media (min-width: $mobile) {
			grid-template-columns: repeat(2, 1fr);
		}
	}
}
.item-product {
	overflow: hidden;
	position: relative;
	border: 2px solid $purpleColor;
	background-image: linear-gradient(131.83deg, #fffafa 0%, #fff7f7 99.21%);
	@include adaptiveValue("padding", 24, 12);
	@include adaptiveValue("border-radius", 24, 16);
	@media (min-width: $mobile) {
		&:first-child {
			opacity: 0.1;
			transform: translate(-30px, 0px);
			-webkit-transform: translate(-30px, 0px);
			transition:
				opacity 0.65s ease,
				transform 0.65s ease;
			-webkit-transition:
				opacity 0.65s ease,
				-webkit-transform 0.65s ease;
			&._watcher-view {
				opacity: 1;
				transform: translate(0px, 0px);
				-webkit-transform: translate(0px, 0px);
			}
		}
		&:last-child {
			opacity: 0.1;
			transform: translate(30px, 0px);
			-webkit-transform: translate(30px, 0px);
			transition:
				opacity 0.65s ease,
				transform 0.65s ease;
			-webkit-transition:
				opacity 0.65s ease,
				-webkit-transform 0.65s ease;
			&._watcher-view {
				opacity: 1;
				transform: translate(0px, 0px);
				-webkit-transform: translate(0px, 0px);
			}
		}
	}
	@media (max-width: $mobile) {
		opacity: 0.1;
		transform: translate(0px, 30px);
		-webkit-transform: translate(0px, 30px);
		transition:
			opacity 0.65s ease,
			transform 0.65s ease;
		-webkit-transition:
			opacity 0.65s ease,
			-webkit-transform 0.65s ease;
		&._watcher-view {
			opacity: 1;
			transform: translate(0px, 0px);
			-webkit-transform: translate(0px, 0px);
		}
	}
	// .item-product__inner
	&__inner {
		height: 100%;
		box-shadow: 0 40px 80px rgba(#8380d1, 0.45);
		@include adaptiveValue("padding-top", 40, 16);
		@include adaptiveValue("padding-left", 24, 12);
		@include adaptiveValue("border-radius", 24, 16);
		@include adaptiveValue("padding-right", 24, 12);
		@include adaptiveValue("padding-bottom", 24, 12);
	}
	// .item-product__heading
	&__heading {
		display: grid;
		grid-template-rows: 1fr auto;
		@include adaptiveValue("min-height", 550, 400, 2, $containerWidth, 767.98);
		@media (min-width: $mobile) {
			row-gap: toRem(15);
		}
		@media (max-width: $mobile) {
			@include adaptiveValue("row-gap", 20, 15, 0, 767.98, 320);
		}
	}
	// .item-product__title
	&__title {
		font-weight: 600;
		line-height: 125%;
		text-align: center;
		@include adaptiveValue("font-size", 32, 16);
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 24, 16);
		}
	}
	// .item-product__list
	&__list {
		li {
			list-style: disc;
		}
		@include adaptiveValue("padding-left", 40, 20);
	}
	// .item-product__bottom
	&__bottom {
		display: grid;
		@include adaptiveValue("gap", 24, 16);
	}
	// .item-product__price
	&__price {
		font-weight: 600;
		line-height: 125%;
		text-align: center;
		@include adaptiveValue("font-size", 32, 16);
	}
	// .item-product__button
	&__button {
		&.button--yellow {
			padding: 0;
			width: 100%;
		}
	}
	// .item-product__items
	&__items {
		display: grid;
		border-top: 1px solid rgba($purpleColor, 0.45);
		@include adaptiveValue("gap", 24, 16);
		@include adaptiveValue("margin-top", 38, 22);
		@include adaptiveValue("padding-top", 38, 22);
	}
	// .item-product__item
	&__item {
		display: flex;
		@include adaptiveValue("gap", 24, 12);
	}
}
// Compare
.compare {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .compare__container
	&__container {
		position: relative;
		&::before,
		&::after {
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			filter: blur(190px);
			background-color: $purpleColor;
			@include adaptiveValue("width", 600, 300);
			@include adaptiveValue("height", 400, 200);
			@media (max-width: $mobile) {
				filter: blur(170px);
			}
		}
		&::before {
			right: 0;
			bottom: 0;
			transform: translate(60%, 20%);
		}
		&::after {
			top: 0;
			left: 0;
			transform: translate(-60%, -20%);
			@media (max-width: $mobile) {
				display: none;
			}
		}
	}
	// .compare__title
	&__title {
	}
	// .compare__body
	&__body {
		@include adaptiveValue("padding", 40, 8);
	}
	// .compare__head
	&__head {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		@include adaptiveValue("gap", 24, 7);
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 24, 12);
		}
	}
	// .compare__subtitle
	&__subtitle {
		display: flex;
		font-weight: 600;
		line-height: 125%;
		align-items: center;
		@include adaptiveValue("padding", 16, 8);
		@include adaptiveValue("font-size", 32, 10);
		@include adaptiveValue("border-radius", 16, 12);
		&:first-child {
			background-color: $yellowColor;
		}
		&:last-child {
			color: #fff;
			background: $blackGradient;
		}
		@media (max-width: $mobile) {
			text-align: center;
			justify-content: center;
		}
	}
	// .compare__items
	&__items {
		display: grid;
		@include adaptiveValue("gap", 16, 8);
	}
	// .compare__item
	&__item {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		@include adaptiveValue("gap", 24, 7);
		&:not(:last-child) {
			.compare__label {
				padding-bottom: toRem(18);
				border-bottom: 1px solid rgba($mainColor, 0.25);
				@media (max-width: $mobileSmall) {
					border-bottom: 1px solid rgba($mainColor, 0.1);
				}
			}
		}
	}
	// .compare__label
	&__label {
		display: flex;
		line-height: 125%;
		position: relative;
		@include adaptiveValue("gap", 16, 4);
		@include adaptiveValue("font-size", 32, 10);
		@include adaptiveValue("padding-top", 18, 4);
		@include adaptiveValue("padding-bottom", 18, 4);
		@include adaptiveValue("padding-left", 18, 4);
		@include adaptiveValue("padding-right", 18, 4);
		&::before {
			content: "";
			border-radius: 50%;
			@include adaptiveValue("height", 16, 4);
			@include adaptiveValue("min-width", 16, 4);
			@include adaptiveValue("margin-top", 13, 5);
		}
		&:first-child {
			&::before {
				border: 1px solid $purpleColor;
				background-color: $yellowColor;
				@media (max-width: $mobile) {
					border: 0.2px solid $purpleColor;
				}
			}
		}
		&:last-child {
			&::before {
				background: $blackGradient;
			}
		}
	}
}
// Psych
.psych {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .psych__container
	&__container {
	}
	// .psych__head
	&__head {
		display: flex;
		align-items: center;
		justify-content: space-between;
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 64, 24);
		}
	}
	// .psych__title
	&__title {
		font-weight: 600;
		line-height: 117%;
		@include adaptiveValue("font-size", 48, 20);
	}
	// .psych__slider
	&__slider {
	}
}
// Case
.case {
	@include adaptiveValue("padding-top", 82, 24);
	@include adaptiveValue("padding-bottom", 82, 24);
	// .case__container
	&__container {
		position: relative;
		&::before,
		&::after {
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			background-color: $purpleColor;
			@include adaptiveValue("width", 600, 300);
			@include adaptiveValue("height", 400, 200);
			@media (max-width: $mobile) {
				filter: blur(120px);
			}
		}
		&::before {
			right: 0;
			bottom: 0;
			filter: blur(190px);
			transform: translate(60%, 20%);
			@media (max-width: $mobile) {
				display: none;
			}
		}
		&::after {
			top: 0;
			filter: blur(230px);
			@media (min-width: $mobile) {
				left: 0;
				transform: translate(-60%, -10%);
			}
			@media (max-width: $mobile) {
				right: 0;
				transform: translate(50%, -20%);
			}
		}
	}
	// .case__head
	&__head {
		display: flex;
		align-items: center;
		justify-content: space-between;
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 64, 24);
		}
	}
	// .case__title
	&__title {
		font-weight: 600;
		line-height: 117%;
		@include adaptiveValue("font-size", 48, 20);
	}
	// .case__slider
	&__slider {
	}
}
// Chose
.chose {
	@include adaptiveValue("padding-top", 82, 24);
	// .chose__container
	&__container {
		position: relative;
		&::before {
			top: 0;
			left: 0;
			content: "";
			z-index: -1;
			border-radius: 50%;
			position: absolute;
			filter: blur(290px);
			background-color: $purpleColor;
			transform: translate(-60%, -100%);
			@include adaptiveValue("width", 600, 300);
			@include adaptiveValue("height", 400, 200);
			@media (max-width: $tablet) {
				filter: blur(190px);
			}
			@media (max-width: $mobileSmall) {
				filter: blur(150px);
				transform: translate(-60%, -10%);
			}
		}
	}
	// .chose__main
	&__main {
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 82, 24);
		}
	}
	// .chose__quest
	&__quest {
	}
}
.main-chose {
	// .main-chose__head
	&__head {
		h4 {
			font-weight: 600;
			line-height: 117%;
			@include adaptiveValue("font-size", 48, 20);
			&:not(:last-child) {
				margin-bottom: toRem(8);
			}
		}
		span {
			line-height: 117%;
			@include adaptiveValue("font-size", 32, 12);
		}
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 64, 24);
		}
	}
	// .main-chose__items
	&__items {
		display: grid;
		@include adaptiveValue("gap", 40, 24);
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 64, 24);
		}
	}
	// .main-chose__item
	&__item {
		display: flex;
		align-items: center;
		@include adaptiveValue("gap", 24, 8);
	}
	// .main-chose__icon
	&__icon {
	}
	// .main-chose__label
	&__label {
		font-weight: 600;
		line-height: 125%;
		@include adaptiveValue("font-size", 32, 12);
	}
	// .main-chose__button
	&__button {
		display: flex;
		justify-content: center;
		a {
			&.button--yellow {
				width: 100%;
				@include adaptiveValue("max-width", 470, 200);
				&.button--yellow {
					padding: 0;
				}
			}
		}
	}
}
.quest-chose {
	display: flex;
	align-items: center;
	flex-direction: column;
	// .quest-chose__title
	&__title {
		font-weight: 600;
		line-height: 117%;
		@include adaptiveValue("font-size", 48, 20);
		&:not(:last-child) {
			@include adaptiveValue("margin-bottom", 24, 12);
		}
	}
	// .quest-chose__button
	&__button {
		width: 100%;
		@include adaptiveValue("max-width", 470, 200);
		&.button--yellow {
			padding: 0;
		}
	}
}
// ========================================================================================================================================================
